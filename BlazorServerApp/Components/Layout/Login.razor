@using GrpcService
@using GrpcService.Services
@inherits LayoutComponentBase
@inject UserClient UserClient
@page "/login"
<head>
    <link rel="stylesheet" href="Login.css"/>
</head>

<header class="welcome-header">
    <h1>Welcome to <span class="highlight">Unrecorded</span></h1>
</header>

<div class="container">
    <!-- Buttons for Login and Signup Toggle -->
    <div class="btn">
        <button class="login" @onclick="ShowLogin">Login</button>
        <button class="signup" @onclick="ShowSignup">Signup</button>
    </div>

    <!-- Dynamic Slider -->
    <div class="slider" style="@SliderStyle"></div>

    <!-- Login and Signup Sections -->
    <div class="form-section" style="@FormContainerStyle">
        <!-- Login Section -->
        <div class="login-box">
            <h2>Login</h2>
            <input type="email" class="ele" placeholder="Email" @bind="loginEmail" />
            <input type="password" class="ele" placeholder="Password" @bind="loginPassword" />
            <button class="clkbtn" @onclick="HandleLogin">Login</button>
        </div>

        <!-- Signup Section -->
        <div class="signup-box">
            <h2>Signup</h2>
            <input type="text" class="ele" placeholder="Name" @bind="signupName" />
            <input type="email" class="ele" placeholder="Email" @bind="signupEmail" />
            <input type="password" class="ele" placeholder="Password" @bind="signupPassword" />
            <input type="password" class="ele" placeholder="Confirm Password" @bind="signupConfirmPassword" />
            <button class="clkbtn" @onclick="HandleSignup">Signup</button>
        </div>
    </div>
</div>

@code {
    private bool isSignup = false;
    private string loginEmail, loginPassword;
    private string signupName, signupEmail, signupPassword, signupConfirmPassword;

    // Dynamic styles for sliding animations
    private string SliderStyle => isSignup ? "transform: translateX(150%);" : "transform: translateX(0%);";
    private string FormContainerStyle => isSignup ? "transform: translateX(-50%);" : "transform: translateX(0);";

    private void ShowLogin() => isSignup = false;
    private void ShowSignup() => isSignup = true;

    private void HandleLogin()
    {
        // Implement login logic here
    }

    private async Task HandleSignup()
    {
        var user = new UserEntity
        {
            Username = signupName,
            Email = signupEmail,
            PassHash = signupPassword
        };

        await UserClient.CreateUserAsync(user);
    }
}